# Production configuration
# Use: docker-compose -f docker-compose.yml -f docker-compose.prod.yml up

version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    restart: always
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    deploy:
      replicas: 2
      resources:
        limits:
          cpus: '1'
          memory: 512M
        reservations:
          cpus: '0.5'
          memory: 256M

  redis:
    command: redis-server /usr/local/etc/redis/redis.conf --requirepass ${REDIS_PASSWORD:-vps_platform_redis_2024}
    logging:
      driver: "json-file"
      options:
        max-size: "5m"
        max-file: "3"

  # Load balancer
  traefik:
    image: traefik:v3.0
    container_name: vps-platform-traefik
    command:
      - "--api.dashboard=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.letsencrypt.acme.email=${ACME_EMAIL}"
      - "--certificatesresolvers.letsencrypt.acme.storage=/acme.json"
      - "--certificatesresolvers.letsencrypt.acme.httpchallenge.entrypoint=web"
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"  # Traefik dashboard
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "./docker/acme.json:/acme.json"
    networks:
      - vps-network
    restart: unless-stopped

  # Monitoring (optional)
  portainer:
    image: portainer/portainer-ce:latest
    container_name: vps-platform-portainer
    restart: unless-stopped
    ports:
      - "9000:9000"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data
    networks:
      - vps-network
    profiles:
      - monitoring

volumes:
  portainer_data:
    driver: local