version: '3.8'

services:
  # Main React application
  app:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: vps-platform-app
    ports:
      - "3000:80"
    environment:
      - NODE_ENV=production
    env_file:
      - .env.local
    restart: unless-stopped
    networks:
      - vps-network
    depends_on:
      - redis
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.vps-app.rule=Host(`localhost`)"
      - "traefik.http.services.vps-app.loadbalancer.server.port=80"

  # Redis for caching and session storage
  redis:
    image: redis:7-alpine
    container_name: vps-platform-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
      - ./docker/redis.conf:/usr/local/etc/redis/redis.conf
    command: redis-server /usr/local/etc/redis/redis.conf
    restart: unless-stopped
    networks:
      - vps-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # PostgreSQL database (opcional - puedes usar Supabase hosted)
  postgres:
    image: postgres:16-alpine
    container_name: vps-platform-postgres
    environment:
      POSTGRES_DB: vps_platform
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/postgres-init.sql:/docker-entrypoint-initdb.d/init.sql
    restart: unless-stopped
    networks:
      - vps-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Nginx reverse proxy (opcional para SSL y load balancing)
  nginx-proxy:
    image: nginx:alpine
    container_name: vps-platform-proxy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./docker/nginx-proxy.conf:/etc/nginx/nginx.conf
      - ./docker/ssl:/etc/nginx/ssl
      - nginx_logs:/var/log/nginx
    depends_on:
      - app
    restart: unless-stopped
    networks:
      - vps-network
    profiles:
      - proxy

networks:
  vps-network:
    driver: bridge
    
volumes:
  redis_data:
    driver: local
  postgres_data:
    driver: local
  nginx_logs:
    driver: local